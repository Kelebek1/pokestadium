name: Pokemon Stadium (North America)
basename: pokemonstadium
options:
  find-file-boundaries: True
  compiler: IDO
  symbol_addrs_path: tools/symbol_addrs.txt
  target_path: baserom.z64
  ld_script_path: pokemonstadium.ld
segments:
  - name: header
    type: header
    start: 0x00
    vram: 0
    subsegments:
    - [0x0000, header, header]
  - name: boot
    type: code
    start: 0x0040
    vram: 0xA4000040
    subsegments:
    - [0x0040, asm, boot]
    - [0x0B70, bin, bootcode_font]
  - name: code
    type: code
    start: 0x1000
    vram: 0x80000400
    subsegments:
    - [0x1000, asm] # bootloader
    - [0x1060, asm, main] # rsp graphics
    - [0x11C0, asm] # rsp audio
    - [0x1A80, asm] # DMA transfer
    - [0x1F80, asm] # dp intro code
    - [0x28E0, asm] # dp code
    - [0x2EC0, asm] # intro loader
    - [0x3640, asm] #
    - [0x3A80, asm] # transition loader
    - [0x3FB0, asm] # PRES-JPEG decoder
    - [0x60A0, asm] # 
    - [0x6430, asm] # controller code
    - [0x6A40, asm] #
    - [0x6BC0, asm] # 
    - [0x75F0, asm] # stage loader
    - [0x8EC0, asm] # crash handler
    - [0x9D20, asm] #
    - [0xAF00, asm] # camera code
    - [0xB130, asm] # dp code for text
    - [0xC030, asm] # extra sprites loader
    - [0xC3D0, asm] #
    - [0xC3F0, asm] # yay0 decoder
    - [0xC4B0, bin] # 
    - [0xCE80, asm] #
    - [0xD470, asm] #
    - [0xDDC0, asm] #
    - [0xE1C0, asm] #
    - [0xE570, asm] #
    - [0xE890, asm] #
    - [0x11BA0, asm] #  
    - [0x12D80, asm] # 
    - [0x17300, asm] #
    - [0x18140, asm] # dp model animations
    - [0x18480, asm] # dp model animations
    - [0x19840, asm] # alternative pkm textures
    - [0x1AB70, asm] # vs screen code
    - [0x1C720, asm] #
    - [0x1CF30, asm] # dp list code
    - [0x20330, asm] # some cache cleaner
    - [0x20470, asm] # dp list for UI and icons
    - [0x225A0, asm] #
    - [0x22630, asm] # registered pkm stats
    - [0x26820, asm] # save data code
    - [0x29BA0, asm] # scenary code
    - [0x2C1C0, asm] # scenary cache cleaner
    - [0x2D340, asm] # pkm lab pc code
    - [0x2E110, asm] # stack cleaner
    - [0x2E460, asm] # pkm lab pokedex code
    - [0x2FEA0, asm] # minigames code
    - [0x30640, asm] # gallery code
    - [0x32D10, asm]
    - [0x334D0, asm]
    - [0x33E30, asm]
    - [0x33FE0, asm]
    - [0x37370, asm]
    - [0x373A0, asm]  # battle code
    - [0x38BB0, asm]  #
    - [0x3D140, asm]  # music code
    - [0x43520, c] # 
    - [0x435B0, c] # 
    - [0x435D0, asm]  # pkm lab cries code
    - [0x45720, asm]  # music code
    - [0x46680, asm]  # speech code
    - [0x47B60, asm]  # sound code
    - [0x485C0, asm]  # moves code 
    - [0x48C60, asm]  # move effects code
    - [0x490A0, asm]  # audio functions to 0x50C00
    - [0x49190, bin]
    - [0x49790, asm]
    - [0x49BA0, asm]
    - [0x49DC0, asm]
    - [0x4A360, asm]
    - [0x4A3E0, asm]
    - [0x4B940, asm]
    - [0x4BA90, asm]
    - [0x4BDC0, asm]
    - [0x4CBC0, asm]
    - [0x4F410, asm]
    - [0x4F7F0, asm]
    - [0x4F870, asm]
    - [0x4FDB0, asm]
    - [0x4FE60, asm]
    - [0x4FF50, bin]
    - [0x50000, asm]
    - [0x50120, asm]
    - [0x50860, asm]
    - [0x50990, asm]
    - [0x50A00, asm]
    - [0x50C20, asm]
    - [0x50CC0, asm]
    - [0x517A0, asm] # yay0 audio decoder
    - [0x518A0, asm]
    - [0x51B20, asm]
    - [0x51BC0, asm]
    - [0x51C50, asm, leofunc]
    - [0x520C0, asm, leoint]
    - [0x52AC0, asm, leocmdex]
    - [0x53150, asm, leoread]
    - [0x53310, asm, lbatobyte]
    - [0x53460, asm]
    - [0x535C0, asm, inquiry]
    - [0x53710, asm]
    - [0x53770, asm, readdiskid]
    - [0x53900, asm, leomecha]
    - [0x54250, asm, spdlmotor]
    - [0x54310, asm]
    - [0x55400, asm, setrtc]
    - [0x554C0, asm]
    - [0x55570, asm, leomseq_tbl]
    - [0x55720, asm, leomotor]
    - [0x55810, asm, leomode_sel]
    - [0x558C0, asm]
    - [0x55960, asm, leoutil]
    - [0x55BB0, asm, rezero]
    - [0x55C50, asm, bytetolba]
    - [0x55DB0, asm, leoreset]
    - [0x55ED0, asm, leotranslat]
    - [0x56170, asm, leotimer]
    - [0x56680, asm]
    - [0x567B0, asm, cjcreateleomanager]
    - [0x569F0, asm, leointerrupt]
    - [0x570C0, asm, driveexist]
    - [0x57190, asm]
    - [0x57230, asm, leotestunit]
    - [0x57270, asm, readrtc]
    - [0x572D0, asm]
    - [0x57390, asm, seek]
    - [0x573F0, asm, piacs]
    - [0x574B0, asm, setcause]
    - [0x574C0, c, os/O1/osSendMesg]
    - [0x57610, c, os/O1/osStopThread]
    - [0x576D0, c, os/O1/osRecvMesg]
    - [0x57810, asm, setintmask]
    - [0x578B0, asm, thread]
    - [0x578F0, asm, scale]
    - [0x57990, asm]
    - [0x57B50, asm, sl]
    - [0x57C10, asm, sptask]
    - [0x57F00, asm, destroythread]
    - [0x58010, asm, ll]
    - [0x582D0, asm]
    - [0x58C70, asm]
    - [0x58EC0, asm, gbpakcheckconnector]
    - [0x59350, asm, gbpakpower]
    - [0x59460, asm, controller]
    - [0x597A0, asm, contreaddata]
    - [0x598C0, asm]
    - [0x59A10, asm]
    - [0x59BF0, asm]
    - [0x59C00, asm, conteeplongread]
    - [0x59C90, asm, virtualtophysical]
    - [0x59D10, asm]
    - [0x59DA0, asm]
    - [0x5A0F0, asm]
    - [0x5A100, asm, gbpakinit]
    - [0x5A330, asm, pfsgetstatus]
    - [0x5A560, asm]
    - [0x5B1C0, asm]
    - [0x5B450, asm, sprawdma]
    - [0x5B4E0, asm, sirawdma]
    - [0x5B590, asm]
    - [0x5B5E0, asm, viblack]
    - [0x5B650, asm, sirawread]
    - [0x5B6A0, asm, sptaskyield]
    - [0x5B6C0, asm, lookatref]
    - [0x5BB50, asm, mtxutil]
    - [0x5BDC0, asm, visetmode]
    - [0x5BE30, asm]
    - [0x5C2A0, asm]
    - [0x5C420, asm, devmgr]
    - [0x5C830, asm, pirawdma]
    - [0x5C900, hasm, os/osGetCount]  # RNG
    - [0x5C910, asm, conteepprobe]
    - [0x5C980, asm, conteepwrite]
    - [0x5CD50, asm]
    - [0x5CE70, asm, contpfs]
    - [0x5D9F0, asm, seteventmesg]
    - [0x5DAB0, asm]
    - [0x5DAC0, asm]
    - [0x5DCF0, asm]
    - [0x5DDB0, asm]
    - [0x5DDE0, asm, xprintf]
    - [0x5EAA0, asm, gbpakgetstatus]
    - [0x5EC20, asm, sprintf]
    - [0x5ECA0, asm]
    - [0x5ECF0, asm]
    - [0x5EDD0, asm]
    - [0x5EE10, asm, syncprintf]
    - [0x5EE50, asm, string]
    - [0x5EEF0, asm]
    - [0x5EFA0, asm]
    - [0x5EFD0, asm]
    - [0x5F050, asm]
    - [0x5F140, asm, sp]
    - [0x5F170, asm, si]
    - [0x5F1A0, asm, translate] # gu
    - [0x5F240, asm, jammesg]
    - [0x5F390, asm, setthreadpri]
    - [0x5F470, asm, getthreadpri]
    - [0x5F490, asm, epirawread]
    - [0x5F5F0, asm, viswapbuf]
    - [0x5F640, asm, epirawdma]
    - [0x5F820, asm, sptaskyielded]
    - [0x5F8A0, asm]
    - [0x5FA40, asm]
    - [0x5FB60, asm]
    - [0x5FD50, asm, gettime]
    - [0x5FDE0, asm]
    - [0x60860, asm]
    - [0x61010, asm]
    - [0x61270, asm]
    - [0x61EF0, asm]
    - [0x621F0, asm]
    - [0x62D40, asm]
    - [0x62D60, asm]
    - [0x62E20, asm, setglobalintmask]
    - [0x62E70, asm, aisetfreq]
    - [0x62FC0, asm, dpctr]
    - [0x63010, asm]
    - [0x63020, asm, normalize]
    - [0x630B0, asm]
    - [0x630C0, asm]
    - [0x630D0, asm, dpsetstat]
    - [0x630E0, asm]
    - [0x63160, asm]
    - [0x63470, asm, resetglobalintmask]
    - [0x634D0, asm, ortho]
    - [0x63690, asm]
    - [0x63720, asm]
    - [0x63860, asm, viswapcontext]
    - [0x63B60, c, os/O1/pigetcmdq]
    - [0x63B90, asm]
    - [0x63D00, asm]
    - [0x63D50, asm, visetspecial]
    - [0x63EB0, asm]
    - [0x63EE0, asm, visetevent]
    - [0x63F50, asm, gbpakreadid]
    - [0x64110, asm]
    - [0x64270, asm, pfsselectbank]
    - [0x642F0, asm]
    - [0x64300, asm, aigetlen]
    - [0x64310, asm]
    - [0x64360, asm]
    - [0x643C0, asm, yieldthread]
    - [0x64410, asm, contramwrite]
    - [0x64660, asm, contramread]
    - [0x64890, asm, crc]
    - [0x64A00, hasm, os/__osGetCause]
    - [0x64A10, asm, epirawwrite]
    - [0x64B70, asm, settimer]
    - [0x64C50, asm]
    - [0x65710, asm, ldiv]
    - [0x658A0, asm, xlitob]
    - [0x65B40, asm, sirawwrite]
    - [0x65B90, asm, spsetstat]
    - [0x65BA0, asm, spgetstat]
    - [0x65BC0, asm, vimgr]
    - [0x65ED0, asm]
    - [0x65EE0, asm]
    - [0x65F10, asm]
    - [0x65F70, asm, startthread]
    - [0x660C0, asm, visetxscale]
    - [0x661F0, asm, visetyscale]
    - [0x66250, asm]
    - [0x66460, asm]
    - [0x66500, asm]
    - [0x66510, asm, gbpakreadwrite]
    - [0x666D0, asm, gbpakselectbank]
    - [0x667A0, asm, aisetnextbuf]
    - [0x66850, asm, ai]
    - [0x66880, asm, conteepread]
    - [0x66AD0, asm, vigetcurrframebuf]
    - [0x66B10, asm, spsetpc]
    - [0x66B50, asm]
    #- [0x66BC0, asm]
  - [0x66BC0, bin]
  - [0x2000000]
